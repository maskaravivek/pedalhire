"""empty message

Revision ID: be5a45a2f7f2
Revises: 
Create Date: 2020-04-18 12:52:16.519761

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'be5a45a2f7f2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('merchants',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=False),
    sa.Column('middle_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=False),
    sa.Column('merchant_photo', sa.String(length=1000), nullable=True),
    sa.Column('address', sa.String(length=1000), nullable=False),
    sa.Column('city', sa.String(length=200), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('login_id', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=False),
    sa.Column('middle_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=False),
    sa.Column('user_photo', sa.String(length=1000), nullable=True),
    sa.Column('address', sa.String(length=1000), nullable=False),
    sa.Column('city', sa.String(length=200), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('login_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name')
    )
    op.create_table('login',
    sa.Column('login_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email_id', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['login_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['login_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('login_id'),
    sa.UniqueConstraint('email_id')
    )
    op.create_table('products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('merchant_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('product_photo', sa.String(length=1000), nullable=True),
    sa.Column('status', sa.Enum('AVAILABLE', 'NOT_AVAILABLE', name='productstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('start_time', sa.String(length=20), nullable=False),
    sa.Column('end_time', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('days', postgresql.ARRAY(sa.String(length=5)), nullable=False),
    sa.Column('order_status', sa.Enum('WAITING_FOR_CONFIRMATION', 'BOOKED', 'IN_CART', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('start_time', sa.String(length=20), nullable=False),
    sa.Column('end_time', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('days', postgresql.ARRAY(sa.String(length=5)), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedule')
    op.drop_table('orders')
    op.drop_table('products')
    op.drop_table('login')
    op.drop_table('users')
    op.drop_table('merchants')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###
